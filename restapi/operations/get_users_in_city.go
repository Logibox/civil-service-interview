// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetUsersInCityHandlerFunc turns a function with the right signature into a get users in city handler
type GetUsersInCityHandlerFunc func(GetUsersInCityParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUsersInCityHandlerFunc) Handle(params GetUsersInCityParams) middleware.Responder {
	return fn(params)
}

// GetUsersInCityHandler interface for that can handle valid get users in city params
type GetUsersInCityHandler interface {
	Handle(GetUsersInCityParams) middleware.Responder
}

// NewGetUsersInCity creates a new http.Handler for the get users in city operation
func NewGetUsersInCity(ctx *middleware.Context, handler GetUsersInCityHandler) *GetUsersInCity {
	return &GetUsersInCity{Context: ctx, Handler: handler}
}

/*GetUsersInCity swagger:route GET /city/{city}/users getUsersInCity

GetUsersInCity get users in city API

*/
type GetUsersInCity struct {
	Context *middleware.Context
	Handler GetUsersInCityHandler
}

func (o *GetUsersInCity) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUsersInCityParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetUsersInCityInternalServerErrorBody get users in city internal server error body
//
// swagger:model GetUsersInCityInternalServerErrorBody
type GetUsersInCityInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get users in city internal server error body
func (o *GetUsersInCityInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUsersInCityInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUsersInCityInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetUsersInCityInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
