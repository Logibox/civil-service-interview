// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Logibox/civil-service-interview/v1/models"
)

// GetUsersInCityOKCode is the HTTP code returned for type GetUsersInCityOK
const GetUsersInCityOKCode int = 200

/*GetUsersInCityOK OK

swagger:response getUsersInCityOK
*/
type GetUsersInCityOK struct {

	/*
	  In: Body
	*/
	Payload models.UserList `json:"body,omitempty"`
}

// NewGetUsersInCityOK creates GetUsersInCityOK with default headers values
func NewGetUsersInCityOK() *GetUsersInCityOK {

	return &GetUsersInCityOK{}
}

// WithPayload adds the payload to the get users in city o k response
func (o *GetUsersInCityOK) WithPayload(payload models.UserList) *GetUsersInCityOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users in city o k response
func (o *GetUsersInCityOK) SetPayload(payload models.UserList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersInCityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.UserList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetUsersInCityInternalServerErrorCode is the HTTP code returned for type GetUsersInCityInternalServerError
const GetUsersInCityInternalServerErrorCode int = 500

/*GetUsersInCityInternalServerError Error

swagger:response getUsersInCityInternalServerError
*/
type GetUsersInCityInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetUsersInCityInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetUsersInCityInternalServerError creates GetUsersInCityInternalServerError with default headers values
func NewGetUsersInCityInternalServerError() *GetUsersInCityInternalServerError {

	return &GetUsersInCityInternalServerError{}
}

// WithPayload adds the payload to the get users in city internal server error response
func (o *GetUsersInCityInternalServerError) WithPayload(payload *GetUsersInCityInternalServerErrorBody) *GetUsersInCityInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users in city internal server error response
func (o *GetUsersInCityInternalServerError) SetPayload(payload *GetUsersInCityInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersInCityInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
