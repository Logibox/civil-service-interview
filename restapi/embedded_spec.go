// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "interview api",
    "version": "0.1"
  },
  "basePath": "/v1",
  "paths": {
    "/city/{city}/users": {
      "get": {
        "operationId": "GetUsersInCity",
        "parameters": [
          {
            "type": "string",
            "name": "city",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "50 miles",
            "name": "within",
            "in": "query"
          },
          {
            "type": "string",
            "default": "UK",
            "name": "country",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "ip_address": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "UserList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "interview api",
    "version": "0.1"
  },
  "basePath": "/v1",
  "paths": {
    "/city/{city}/users": {
      "get": {
        "operationId": "GetUsersInCity",
        "parameters": [
          {
            "type": "string",
            "name": "city",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "50 miles",
            "name": "within",
            "in": "query"
          },
          {
            "type": "string",
            "default": "UK",
            "name": "country",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "ip_address": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "UserList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    }
  }
}`))
}
